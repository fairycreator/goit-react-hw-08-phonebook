{"version":3,"file":"static/js/776.319e270a.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm /ContactForm.module.css?212b","components/ContactForm /ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectIsFetching = state => state.auth.isFetching;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__TvUMf\",\"form\":\"ContactForm_form__DTryN\",\"formLabel\":\"ContactForm_formLabel__OdPzI\",\"formInput\":\"ContactForm_formInput__Am1QL\",\"addContactBtn\":\"ContactForm_addContactBtn__JHrh6\"};","import { useState } from 'react';\n//  import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\nimport styles from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    console.log('Add Contact button clicked!');\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n        // id: nanoid(),\n      })\n    );\n\n    setcontactName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className={styles.formContainer}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            name=\"name\"\n            value={contactName}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={styles.formLabel}>\n          Number\n          <input\n            className={styles.formInput}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button className={styles.addContactBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactListBtn\":\"ContactList_contactListBtn__iwQAv\",\"contactText\":\"ContactList_contactText__mBjoQ\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectStatusFilter } from 'redux/selectors';\n\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={styles.contactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactItem}>\n          <p className={styles.contactText}>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.contactListBtn}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.string),\n  onDeleteContact: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactLabel\":\"Filter_contactLabel__TqLYf\",\"contactInput\":\"Filter_contactInput__YRet6\",\"loader\":\"Filter_loader__8ZH1R\",\"contactsTitle\":\"Filter_contactsTitle__eTnDx\",\"phonebookTitle\":\"Filter_phonebookTitle__dPi5L\",\"animatedBackground\":\"Filter_animatedBackground__ELOCj\"};","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectStatusFilter } from 'redux/selectors';\nimport styles from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <label className={styles.contactLabel}>\n      Find contacts by name\n      <input\n        className={styles.contactInput}\n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Please write name\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  OnChange: PropTypes.func,\n};\n","import { ContactForm } from 'components/ContactForm /ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && (\n        <b\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: '10px',\n          }}\n        >\n          Loading...\n        </b>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","contactName","setcontactName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","name","_jsx","className","styles","children","_jsxs","onSubmit","console","log","preventDefault","some","_ref","window","alert","concat","addContact","type","onChange","pattern","title","required","ContactList","normalizedFilter","toLowerCase","filteredContacts","includes","useEffect","fetchContacts","map","_ref2","id","onClick","deleteContact","Filter","setFilter","placeholder","Contacts","style","display","flexDirection","alignItems","marginLeft","marginRight","marginTop"],"sourceRoot":""}